name: Weekly Ethereum Newsletter

on:
  schedule:
    # Every Monday 12:00 UTC
    - cron: '0 15 * * 5'
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  generate-and-send:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate timestamp
        id: generate-timestamp
        run: echo "TIMESTAMP=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Install Python and requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Prompt Context (last 7 days)
        run: python scripts/build_prompt_context.py

      - name: Print context
        run: cat scripts/prompt_context.md

      - name: Generate First Section
        uses: xinbenlv/openhands-action@v1.0.1-rc3
        with:
          prompt: >- 
            Read prompts/prompt_1.md from the root of the repository and use 
            it to generate a newsletter.
            Use date range: past 7 days
            Save the result to: ${{ github.workspace }}/part_1_output.md
          llm_api_key: ${{ secrets.LLM_API_KEY }}
      
      - name: Generate Third Section
        uses: xinbenlv/openhands-action@v1.0.1-rc3
        with:
          prompt: >- 
            Read prompts/prompt_3.md from the root of the repository and use 
            it to generate a newsletter.
            Your structured context data is located at 'scripts/prompt_context.md' in your workspace.
            Please read this file to obtain the structured context data.
            Use date range: past 7 days
            Save the result to: ${{ github.workspace }}/part_3_output.md
          llm_api_key: ${{ secrets.LLM_API_KEY }}

      # --- FIX PERMISSIONS & COMBINE ---

      - name: Combine Newsletter Sections
        run: |
          # First, fix ownership of the entire workspace to ensure the runner user can write here.
          sudo chown -R $(id -u):$(id -g) ${{ github.workspace }}

          # Define the absolute path for the final newsletter file
          FINAL_FILE="${{ github.workspace }}/final_newsletter.md"
          TIMESTAMP=$(date -u +"%B %d, %Y")

          # Now, create the final file with the header as the runner user
          echo "## Week in Ethereum News" > "$FINAL_FILE"
          echo "### $TIMESTAMP" >> "$FINAL_FILE"
          echo "" >> "$FINAL_FILE"
          
          # Find and combine all part_*_output.md files in the correct order
          find "${{ github.workspace }}" -name "part_*_output.md" -print0 | sort -z | xargs -0 cat >> "$FINAL_FILE"
          
          echo "--- Final Combined Newsletter ---"
          cat "$FINAL_FILE"
          echo "---------------------------------"


      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install resend and markdown2
        run: pip install resend markdown2

      - name: Send Newsletter via Resend
        run: |
          # The send script can now reliably read the final file
          python scripts/send_newsletter.py "${{ github.workspace }}/final_newsletter.md"
        env:
          NEWSLETTER_RECIPIENT: new-week-in-ethereum@googlegroups.com
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
