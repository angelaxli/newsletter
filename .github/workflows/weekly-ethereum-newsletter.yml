name: Weekly Ethereum Newsletter

on:
  schedule:
    # Every Monday 12:00 UTC
    - cron: '0 15 * * 5'
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  generate-and-send:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate timestamp
        id: generate-timestamp
        run: echo "TIMESTAMP=$(date +'%Y%m%d')" >> $GITHUB_ENV
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Build Prompt Context (last 7 days)
        run: python scripts/build_prompt_context.py

      - name: Print context contents
        run: cat scripts/prompt_context.md
      
      - name: Generate Part 1 - Core Protocol
        uses: xinbenlv/openhands-action@v1.0.1-rc3
        with:
          prompt: |
            Read 'prompts/part_1_core_protocol.md' and use it to generate the core protocol sections.
            Save the result to: ${{ github.workspace }}/part_1_output.md
          llm_api_key: ${{ secrets.LLM_API_KEY }}

      - name: Generate Part 2 - Ecosystem & App Layer
        uses: xinbenlv/openhands-action@v1.0.1-rc3
        with:
          prompt: |
            Read 'prompts/part_2_ecosystem.md' and use it to generate the ecosystem sections.
            Save the result to: ${{ github.workspace }}/part_2_output.md
          llm_api_key: ${{ secrets.LLM_API_KEY }}

      - name: Generate Part 3 - Data-Driven & General Info
        uses: xinbenlv/openhands-action@v1.0.1-rc3
        with:
          prompt: |
            Read 'prompts/part_3_data_general.md'. Your context data is in 'scripts/prompt_context.md'.
            Use it to generate the data-driven sections. Save the result to: ${{ github.workspace }}/part_3_output.md
          context: scripts/prompt_context.md
          llm_api_key: ${{ secrets.LLM_API_KEY }}

      # --- COMBINE AND SEND ---

      - name: Combine Newsletter Sections
        id: combine_step
        run: |
          sudo bash -c '
            FINAL_FILE="${{ github.workspace }}/final_newsletter.md"
            TIMESTAMP=$(date -u +"%B %d, %Y")

            # Create the final newsletter file with a header
            echo "## Week in Ethereum News" > "$FINAL_FILE"
            echo "### $TIMESTAMP" >> "$FINAL_FILE"
            echo "" >> "$FINAL_FILE"
            
            # Use find within the workspace to get all part_*.md files and sort them alphabetically
            # The output of this command is then appended to the final file
            find "${{ github.workspace }}" -name "part_*_output.md" -print0 | sort -z | xargs -0 cat >> "$FINAL_FILE"
            
            echo "--- Final Combined Newsletter ---"
            cat "$FINAL_FILE"
            echo "---------------------------------"
          '
          
      
      - name: Upload Summary Report
        uses: actions/upload-artifact@v4
        with:
          name: weekly-ethereum-newsletter
          path: newsletter_*.md
          retention-days: 14
          if-no-files-found: warn

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies round 2
        run: pip install resend markdown2
        

      - name: Send Newsletter via Resend
        run: |
          # Your send script now uses the combined file with an absolute path
          # It can read the file even if it's owned by root.
          python scripts/send_newsletter.py "${{ github.workspace }}/final_newsletter.md"
        env:
          NEWSLETTER_RECIPIENT: new-week-in-ethereum@googlegroups.com
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
